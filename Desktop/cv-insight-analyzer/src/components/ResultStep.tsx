
import { useAnalysis } from '@/context/AnalysisContext';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import CircleProgress from '@/components/CircleProgress';
import { toast } from '@/lib/toast';
import { 
  ArrowLeftIcon, 
  RefreshCwIcon, 
  DownloadIcon, 
  CheckIcon, 
  XIcon, 
  TrendingUpIcon, 
  TargetIcon, 
  LightbulbIcon,
  StarIcon,
  AlertCircleIcon,
  AwardIcon,
  BarChart3Icon
} from 'lucide-react';

const ResultStep = () => {
  const { analysisResult, setCurrentStep } = useAnalysis();
  
  if (!analysisResult) {
    return (
      <div className="flex flex-col items-center justify-center w-full max-w-3xl mx-auto px-4">
        <Card className="w-full">
          <CardContent className="py-10">
            <div className="text-center">
              <p>No analysis results found. Please complete the assessment.</p>
              <Button
                className="mt-4"
                onClick={() => setCurrentStep('upload')}
              >
                Start Over
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }
  
  const { resumeScore, assessmentScore, improvementPoints, overallScore, matchedSkills, unmatchedSkills, questionEvaluation } = analysisResult;
  
  const handleStartOver = () => {
    setCurrentStep('upload');
  };
  
  const handleDownloadReport = () => {
    // Create a report string
    const report = `
Resume Analysis Report

Overall Score: ${overallScore}/100

Resume Score: ${resumeScore.score}/100
Strengths:
${resumeScore.strengths.map(s => `- ${s}`).join('\n')}

Weaknesses:
${resumeScore.weaknesses.map(w => `- ${w}`).join('\n')}

Matched Skills:
${matchedSkills.map(s => `- ${s}`).join('\n')}

Unmatched Skills (Missing):
${unmatchedSkills.map(s => `- ${s}`).join('\n')}

Assessment Score: ${assessmentScore.score}/100
Feedback:
${assessmentScore.feedback}

Assessment Questions:
${questionEvaluation?.map(q => 
  `Q: ${q.question}\nA: ${q.answer}\nFeedback: ${q.feedback}\nScore: ${q.score}/100`
).join('\n\n')}

Improvement Points:
${improvementPoints.map(p => `- ${p}`).join('\n')}

Generated by Resume Analyzer
    `.trim();
    
    // Create a blob and download link
    const blob = new Blob([report], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'resume-analysis-report.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast.success('Report downloaded successfully');
  };
  
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 py-8 px-4">
      <div className="max-w-7xl mx-auto space-y-8">
        {/* Header Section */}
        <div className="text-center space-y-4">
          <div className="inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-full mb-4">
            <AwardIcon className="w-8 h-8 text-white" />
          </div>
          <h1 className="text-4xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent">
            Analysis Results
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            Your comprehensive resume and assessment analysis is ready
          </p>
        </div>

        {/* Overall Score Card */}
        <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-xl animate-slide-up card-hover">
          <CardContent className="p-8">
            <div className="flex flex-col lg:flex-row items-center justify-between gap-8">
              <div className="flex-1 space-y-6">
                <div className="text-center lg:text-left">
                  <h2 className="text-3xl font-bold text-gray-900 mb-2">Overall Performance</h2>
                  <p className="text-gray-600">Based on resume analysis and assessment evaluation</p>
                </div>
                
                <div className="flex flex-col sm:flex-row items-center gap-6">
                  <div className="flex items-center gap-4">
                    <div className="text-center">
                      <CircleProgress 
                        value={resumeScore.score} 
                        label="Resume" 
                        size={100}
                        className="mb-2"
                      />
                      <p className="text-sm font-medium text-gray-600">Resume Score</p>
                    </div>
                    <div className="text-2xl font-bold text-gray-400">+</div>
                    <div className="text-center">
                      <CircleProgress 
                        value={assessmentScore.score} 
                        label="Assessment" 
                        size={100}
                        className="mb-2"
                      />
                      <p className="text-sm font-medium text-gray-600">Assessment Score</p>
                    </div>
                    <div className="text-2xl font-bold text-gray-400">=</div>
                    <div className="text-center">
                      <CircleProgress 
                        value={overallScore} 
                        label="Total" 
                        size={120}
                        strokeWidth={6}
                        className="mb-2"
                      />
                      <p className="text-sm font-medium text-gray-600">Overall Score</p>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="flex-1 space-y-4">
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm font-medium text-gray-600">Resume Quality</span>
                    <span className="text-sm font-bold text-gray-900">{resumeScore.score}/100</span>
                  </div>
                  <Progress value={resumeScore.score} className="h-2" />
                </div>
                
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm font-medium text-gray-600">Assessment Performance</span>
                    <span className="text-sm font-bold text-gray-900">{assessmentScore.score}/100</span>
                  </div>
                  <Progress value={assessmentScore.score} className="h-2" />
                </div>
                
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span className="text-sm font-medium text-gray-600">Overall Score</span>
                    <span className="text-sm font-bold text-gray-900">{overallScore}/100</span>
                  </div>
                  <Progress value={overallScore} className="h-3" />
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
        {/* Skills Analysis Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Matched Skills */}
          <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-lg animate-slide-up card-hover">
            <CardHeader className="pb-4">
              <CardTitle className="flex items-center gap-3 text-xl">
                <div className="p-2 bg-green-100 rounded-lg">
                  <CheckIcon className="h-6 w-6 text-green-600" />
                </div>
                <span className="text-gray-900">Matched Skills</span>
                <Badge variant="secondary" className="bg-green-100 text-green-800">
                  {matchedSkills.length}
                </Badge>
              </CardTitle>
              <CardDescription className="text-gray-600">
                Skills that align with the job requirements
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {matchedSkills.length > 0 ? (
                  <div className="flex flex-wrap gap-2">
                    {matchedSkills.map((skill, index) => (
                      <Badge 
                        key={index} 
                        variant="outline" 
                        className="bg-green-50 text-green-700 border-green-200 hover:bg-green-100 transition-colors"
                      >
                        <StarIcon className="h-3 w-3 mr-1" />
                        {skill}
                      </Badge>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8 text-gray-500">
                    <AlertCircleIcon className="h-12 w-12 mx-auto mb-3 text-gray-300" />
                    <p>No matched skills found</p>
                  </div>
                )}
              </div>
            </CardContent>
          </Card>

          {/* Missing Skills */}
          <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-lg animate-slide-up card-hover">
            <CardHeader className="pb-4">
              <CardTitle className="flex items-center gap-3 text-xl">
                <div className="p-2 bg-orange-100 rounded-lg">
                  <TargetIcon className="h-6 w-6 text-orange-600" />
                </div>
                <span className="text-gray-900">Skills to Develop</span>
                <Badge variant="secondary" className="bg-orange-100 text-orange-800">
                  {unmatchedSkills.length}
                </Badge>
              </CardTitle>
              <CardDescription className="text-gray-600">
                Skills that could strengthen your profile
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {unmatchedSkills.length > 0 ? (
                  <div className="flex flex-wrap gap-2">
                    {unmatchedSkills.map((skill, index) => (
                      <Badge 
                        key={index} 
                        variant="outline" 
                        className="bg-orange-50 text-orange-700 border-orange-200 hover:bg-orange-100 transition-colors"
                      >
                        <TrendingUpIcon className="h-3 w-3 mr-1" />
                        {skill}
                      </Badge>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8 text-gray-500">
                    <CheckIcon className="h-12 w-12 mx-auto mb-3 text-green-300" />
                    <p>Great! No missing skills identified</p>
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
        </div>
        {/* Improvement Points */}
        <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-lg">
          <CardHeader>
            <CardTitle className="flex items-center gap-3 text-xl">
              <div className="p-2 bg-blue-100 rounded-lg">
                <LightbulbIcon className="h-6 w-6 text-blue-600" />
              </div>
              <span className="text-gray-900">Improvement Recommendations</span>
            </CardTitle>
            <CardDescription className="text-gray-600">
              Actionable insights to enhance your professional profile
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {improvementPoints.map((point, index) => (
                <div key={index} className="flex items-start gap-3 p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-100">
                  <div className="flex-shrink-0 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">
                    {index + 1}
                  </div>
                  <p className="text-gray-700 leading-relaxed">{point}</p>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
        {/* Assessment Feedback */}
        {questionEvaluation && questionEvaluation.length > 0 && (
          <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center gap-3 text-xl">
                <div className="p-2 bg-purple-100 rounded-lg">
                  <BarChart3Icon className="h-6 w-6 text-purple-600" />
                </div>
                <span className="text-gray-900">Assessment Feedback</span>
              </CardTitle>
              <CardDescription className="text-gray-600">
                Detailed evaluation of your assessment responses
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                {questionEvaluation.map((evaluation, index) => (
                  <div key={index} className="border border-gray-200 rounded-xl p-6 bg-gradient-to-r from-gray-50 to-white hover:shadow-md transition-shadow">
                    <div className="space-y-4">
                      <div className="flex items-start justify-between">
                        <h4 className="font-semibold text-gray-900">Question {index + 1}</h4>
                        <Badge 
                          variant="outline" 
                          className={`${
                            evaluation.score >= 80 
                              ? 'bg-green-100 text-green-800 border-green-200' 
                              : evaluation.score >= 60 
                              ? 'bg-yellow-100 text-yellow-800 border-yellow-200' 
                              : 'bg-red-100 text-red-800 border-red-200'
                          }`}
                        >
                          {evaluation.score}/100
                        </Badge>
                      </div>
                      
                      <div className="space-y-3">
                        <div>
                          <p className="text-sm font-medium text-gray-600 mb-1">Question:</p>
                          <p className="text-gray-900 bg-blue-50 p-3 rounded-lg">{evaluation.question}</p>
                        </div>
                        
                        <div>
                          <p className="text-sm font-medium text-gray-600 mb-1">Your Answer:</p>
                          <p className="text-gray-900 bg-gray-50 p-3 rounded-lg">{evaluation.answer}</p>
                        </div>
                        
                        <div>
                          <p className="text-sm font-medium text-gray-600 mb-1">Feedback:</p>
                          <p className="text-gray-700 bg-purple-50 p-3 rounded-lg">{evaluation.feedback}</p>
                        </div>
                        
                        <div className="space-y-2">
                          <div className="flex items-center justify-between text-sm">
                            <span className="font-medium text-gray-600">Score</span>
                            <span className="font-bold text-gray-900">{evaluation.score}%</span>
                          </div>
                          <Progress 
                            value={evaluation.score} 
                            className="h-2"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        )}
        {/* Resume Analysis Summary */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Strengths */}
          <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center gap-3 text-xl">
                <div className="p-2 bg-green-100 rounded-lg">
                  <TrendingUpIcon className="h-6 w-6 text-green-600" />
                </div>
                <span className="text-gray-900">Resume Strengths</span>
              </CardTitle>
              <CardDescription className="text-gray-600">
                What makes your resume stand out
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {resumeScore.strengths.map((strength, index) => (
                  <div key={index} className="flex items-start gap-3 p-3 bg-green-50 rounded-lg border border-green-100">
                    <CheckIcon className="h-5 w-5 text-green-600 mt-0.5 flex-shrink-0" />
                    <p className="text-gray-700">{strength}</p>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Areas for Improvement */}
          <Card className="bg-white/90 backdrop-blur-sm border-0 shadow-lg">
            <CardHeader>
              <CardTitle className="flex items-center gap-3 text-xl">
                <div className="p-2 bg-amber-100 rounded-lg">
                  <AlertCircleIcon className="h-6 w-6 text-amber-600" />
                </div>
                <span className="text-gray-900">Areas for Improvement</span>
              </CardTitle>
              <CardDescription className="text-gray-600">
                Opportunities to enhance your profile
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {resumeScore.weaknesses.map((weakness, index) => (
                  <div key={index} className="flex items-start gap-3 p-3 bg-amber-50 rounded-lg border border-amber-100">
                    <XIcon className="h-5 w-5 text-amber-600 mt-0.5 flex-shrink-0" />
                    <p className="text-gray-700">{weakness}</p>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Action Buttons */}
        <Card className="bg-gradient-to-r from-blue-600 to-indigo-600 border-0 shadow-xl">
          <CardContent className="p-8">
            <div className="flex flex-col sm:flex-row items-center justify-between gap-6">
              <div className="text-center sm:text-left">
                <h3 className="text-2xl font-bold text-white mb-2">Ready to Take Action?</h3>
                <p className="text-blue-100">
                  Download your detailed report or start a new analysis
                </p>
              </div>
              
              <div className="flex flex-col sm:flex-row gap-4">
                <Button
                  variant="outline"
                  onClick={handleStartOver}
                  className="bg-white text-blue-600 hover:bg-blue-50 border-white hover:border-blue-200 flex items-center gap-2 px-6 py-3"
                >
                  <RefreshCwIcon className="w-5 h-5" />
                  Start New Analysis
                </Button>
                
                <Button
                  onClick={handleDownloadReport}
                  className="bg-white text-blue-600 hover:bg-blue-50 flex items-center gap-2 px-6 py-3"
                >
                  <DownloadIcon className="w-5 h-5" />
                  Download Report
                </Button>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default ResultStep;
